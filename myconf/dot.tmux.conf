# improve colors
set -g default-terminal 'screen-256color'

# keybindings
unbind C-b
unbind C-z

# rebind prefix key
set -g prefix C-z
bind C-z    last-window
bind z      send-key C-z
bind C-a    send-prefix

# similar to screen keybinds
if-shell '[ "$(tmux -V)" = "tmux 1.8" ]' \
	"bind c      new-window" \
	"bind c      new-window -c '#{pane_current_path}'"
bind C-d    detach
bind a      command-prompt 'rename-window %%'
bind A      command-prompt 'rename-session %%'
bind *      list-clients
bind w      list-windows
bind C-w    list-windows
bind x      kill-pane
bind X      kill-window
bind k      confirm-before 'kill-window'
bind |      split-window -h
bind '"'    choose-window

# other keybinds
bind C      command-prompt -p 'Name of new window:' 'new-window -n "%%"'
bind \      split-window -h
bind -      split-window -v
bind q      confirm-before kill-session
bind Q      confirm-before kill-server
# bind ,      previous-window # <
# bind .      next-window     # >
bind <      swap-window -t :-
bind >      swap-window -t :+
bind R      refresh-client
bind C-j    resize-pane -L 5
bind C-l    resize-pane -R 5
bind C-k    resize-pane -D 5
bind C-i    resize-pane -U 5
bind r      source-file ~/.tmux.conf

# act like vim
#set -g status-keys vi
setw -g mode-keys vi
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# rebind copy-mode
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'y' copy-selection
bind -t emacs-copy 'C-2' begin-selection

# renumber windows
set -g renumber-windows on

# status bar
set -g status-utf8 on
set -g status-bg white
set -g status-fg black
set -g status-left-length 40
if-shell 'test $(uname) = "Darwin"' \
	"set -g status-left ' #[bold]❐ #S#[default] ⡇'" \
	"set -g status-left ' #[bold]#S#[default] ⡇'"
set -g status-right '#[fg=black] %b %d, %R'

## highlight active window
setw -g window-status-format ' #I #W '
if-shell '[ "$(tmux -V)" = "tmux 1.8" ]' \
	"setw -g window-status-fg black"  \
	"setw -g window-status-style 'fg=black'"
setw -g window-status-current-format ' #I #W '
if-shell '[ "$(tmux -V)" = "tmux 1.8" ]' \
	"setw -g window-status-current-fg white"
if-shell '[ "$(tmux -V)" = "tmux 1.8" ]' \
	"setw -g window-status-current-bg black" \
	"setw -g window-status-current-style 'fg=white,bg=black'"
if-shell '[ "$(tmux -V)" = "tmux 1.8" ]' \
	"setw -g window-status-last-fg black" \
	"setw -g window-status-last-style 'fg=black,bold'"
if-shell '[ "$(tmux -V)" = "tmux 1.8" ]' \
	"setw -g window-status-activity-fg green" \
	"setw -g window-status-activity-style 'fg=green'"

## set window notifications
set -g visual-activity off
setw -g monitor-activity on
set -g history-limit 65536

## tmux window titling for X
set -g set-titles on
if-shell "[[ -n '$SSH_CLIENT' ]]" \
	"set -g set-titles-string '[tmux: #S:#I.#P @#h] #T'" \
	"set -g set-titles-string '#(whoami) :: #h :: #(curl ipecho.net/plain;echo)'"
setw -g automatic-rename on

# start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1
setw -g pane-base-index 1

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

## enable mouse
set -g mouse-select-pane on
set -g mouse-select-window on
set -g mouse-resize-pane on
set -g mouse-utf8 on
setw -g mode-mouse on

## pane border and colors
set -g pane-active-border-fg yellow
set -g pane-border-fg white

# This is so that each environment gets PATH and the like (plus the defaults
# from tmux) from the invoking shell, and NOT from the global tmux environment.
#set -g update-environment "PATH LESS GEM_PATH GEM_HOME DISPLAY SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY"

# https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard
if-shell "which reattach-to-user-namespace" \
	"set -g default-command 'reattach-to-user-namespace -l bash'"
if-shell "which reattach-to-user-namespace" \
	"bind-key C-c run-shell 'tmux save-buffer - | reattach-to-user-namespace pbcopy'"
if-shell "which reattach-to-user-namespace" \
	"bind-key C-v run-shell 'reattach-to-user-namespace pbpaste | tmux load-buffer - \; paste-buffer -d'"
if-shell "which reattach-to-user-namespace" \
	"bind-key -t    vi-copy y   'reattach-to-user-namespace pbcopy'"
if-shell "which reattach-to-user-namespace" \
	"bind-key -t emacs-copy M-w 'reattach-to-user-namespace pbcopy'"

# Local config
if-shell "[ -f ~/.tmux.conf.local ]" 'source ~/.tmux.conf.local'
