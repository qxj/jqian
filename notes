-*- org -*-

* Input special charactors
C-x 8 RET, C-x 8 C-h

* Removing blank lines in a buffer
M-x flush-lines RET ^$ RET

* Join two lines
M-^

* Dired open directory in the same buffer

a (M-x dired-find-alternate-file)

* Input 100 times 1
C-u 100 C-u 1

* Rectangle edit
C-x r k, Kill a marked rectangle region
C-x r y, Yank the last killed rectangle with *upper left corner* at point.
C-x r o, Blank out the region-rectangle, shifting text right.

* Copy/insert a region with register
C-x r s, Copy region into register
C-x r r, Copy rectangular region into register
C-x r i, Insert contents of register

* Save and restore window configuration with register
C-x r w, C-x r j

* Repeat last command
C-x z

* Print keystrokes you entered
M-x view-lossage

* View command you entered
M-x command-history

* Run a shell command and insert result into current buffer
C-u M-!

* Send a region to a shell command
M-|

* Local time of sunrise and sunset for today
M-x sunrise-sunset

* How long did you run this Emacs
M-x emacs-uptime

* org-mode 7.0+ support easy-template
ex: input <s then press TAB, it will be expand automatically.

* edit dired buffer with wdired
C-x C-q

* expand a defmacro
macroexpand & macroexpand-all

* ido-enable-regexp
if toggle on ido-enable-regexp, M-x ido-find-file RET c\++ to escape regexp.

* dired-backup-diff
M-=, in dired-mode buffer

* replace string in a directory recursively
M-x find-dired, specify (1) directory and (2) find arguments, e.g.:
-name ".h" -o -name ".cpp", and RET.
Then (1) press `m' to select files, or `t' to select them all, (2) press
`Q' to query regexp string, e.g.: \<DEBUG\>, (3) press RET.

* set-goal-column
C-x C-n

* add .dir-locals.el for a project or a directory
M-x add-dir-local-variable

* treat underline _ as a part of words
(modify-syntax-entry ?_ "w")
